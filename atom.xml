<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liuniandxx Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-05-16T15:24:59.034Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Liuniandxx</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bloom Filter</title>
    <link href="http://yoursite.com/2016/05/16/bloom-filter/"/>
    <id>http://yoursite.com/2016/05/16/bloom-filter/</id>
    <published>2016-05-16T10:21:03.000Z</published>
    <updated>2016-05-16T15:24:59.034Z</updated>
    
    <content type="html">&lt;p&gt;Bloom Filter(布隆过滤器)是由Howard Bloom在1970年提出的二进制向量数据结构，应用哈希变换来解决集合成员判定（set membership）问题，具有很好的空间和时间效率。&lt;/p&gt;
&lt;h4 id=&quot;Bloom-Filter的原理&quot;&gt;&lt;a href=&quot;#Bloom-Filter的原理&quot; class=&quot;headerlink&quot; title=&quot;Bloom Filter的原理&quot;&gt;&lt;/a&gt;Bloom Filter的原理&lt;/h4&gt;&lt;p&gt;Bloom Filter能够很容易的表示集合数据，使用长度为m的数组存储集合信息，使用k个相互独立的hash函数，将集合中的元素映射到m位的数组空间中。&lt;br&gt;基本思想：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将长度为m的数组位全部设置为0&lt;/li&gt;
&lt;li&gt;对于集合S中的任意一个元素a，使用k个独立的hash函数进行计算，&lt;img src=&quot;http://chart.googleapis.com/chart?cht=tx&amp;chl=$h_i(a)=x,(1 \leq i \leq k, 1 \leq x \leq m)$&quot; style=&quot;border:none;&quot;&gt;，将数组中x个位置设置为1，对于结合a来说，经过k次hash运算后，会将数组中w位&lt;img src=&quot;http://chart.googleapis.com/chart?cht=tx&amp;chl=(w \leq k)&quot; style=&quot;border:none;&quot;&gt;设置为1&lt;/li&gt;
&lt;li&gt;对于集合S的每个元素，重复步骤2，就完成了集合S和数组之间的映射&lt;/li&gt;
&lt;li&gt;完成步骤1，2，3后，查找某个元素b是否在集合S中，使用相同的k个hash函数计算hash值，如果数组所有hash值对应的位都为1，则判定b属于集合S，如果存在数组中hash值对应的位为0，则判定b不属于集合S&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Bloom-Filter伪代码实现&quot;&gt;&lt;a href=&quot;#Bloom-Filter伪代码实现&quot; class=&quot;headerlink&quot; title=&quot;Bloom Filter伪代码实现&quot;&gt;&lt;/a&gt;Bloom Filter伪代码实现&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;[Bloom Filter]&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;BloomFilter(Set s, hashs_k, m)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filter [1..m] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foreach ai in S:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foreach hj in hashs_k:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        filter[hj(ai)] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    end foreach&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end foreach&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return filter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IsMember(filter, hashs_k, Key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foreach hj in hashs_k:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if filter[hj(Key)] == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Bloom-Filter误判和概率&quot;&gt;&lt;a href=&quot;#Bloom-Filter误判和概率&quot; class=&quot;headerlink&quot; title=&quot;Bloom Filter误判和概率&quot;&gt;&lt;/a&gt;Bloom Filter误判和概率&lt;/h4&gt;&lt;img src=&quot;/img/bloom_filter.jpg&quot;&gt;
&lt;p&gt;Bloom Filter是通过位数组和hash函数来表征集合的，没有实际存储集合数据，所以空间利用率很高，但是会存在误判(false positive)的情况。Bloom Filter的误判情况只能是将不是集合的元素判定成集合元素，不可能出现将集合元素判定为非集合元素，因为在将该成员映射到位数组空间的过程中，对应的位置已经被设置为1,Bloom Filter不存在将1改为0的情况，所以一定不会发生漏判(false negative)的情况。Bloom Filter只能使用在允许一定程度的误判的场景，不能使用在要求100%准确的判定集合元素的场景。&lt;br&gt;结合上图中的Bloom Filter的例子，上图中位数组的长度为12,使用3个hash函数(每个都有3个箭头指向位数组)，图中表示x1和x2已经映射到位数组中了。假设现在有一个元素x3(不同于x1和x2)，其映射到位数组中，刚好将对应的2,7和11，那么使用IsMember的逻辑将误判x3已经映射到位数组中。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Bloom Filter(布隆过滤器)是由Howard Bloom在1970年提出的二进制向量数据结构，应用哈希变换来解决集合成员判定（set membership）问题，具有很好的空间和时间效率。&lt;/p&gt;
&lt;h4 id=&quot;Bloom-Filter的原理&quot;&gt;&lt;a href=
    
    </summary>
    
    
      <category term="data structure" scheme="http://yoursite.com/tags/data-structure/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/05/03/hello-world/"/>
    <id>http://yoursite.com/2016/05/03/hello-world/</id>
    <published>2016-05-03T15:42:39.807Z</published>
    <updated>2016-05-03T15:42:39.807Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo Hello world</title>
    <link href="http://yoursite.com/2016/05/03/Hexo-Hello-world/"/>
    <id>http://yoursite.com/2016/05/03/Hexo-Hello-world/</id>
    <published>2016-05-03T15:40:35.000Z</published>
    <updated>2016-05-03T15:40:47.131Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
